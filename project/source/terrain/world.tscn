[gd_scene load_steps=10 format=3 uid="uid://yak5oxpc2kif"]

[ext_resource type="Texture2D" uid="uid://ynv4srnp3rjr" path="res://resource/tile/land_tiles.png" id="1_8lmkf"]
[ext_resource type="Texture2D" uid="uid://37yraqfk8as4" path="res://resource/tile/building_tiles.png" id="2_p1xed"]
[ext_resource type="Texture2D" uid="uid://b2g06mnlrskcg" path="res://resource/tile/water.png" id="3_bfiom"]

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_7itt6"]
texture = ExtResource("1_8lmkf")
0:0/0 = 0
0:0/0/z_index = -1
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0 = 0
1:0/0/z_index = -2
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
2:0/0 = 0
2:0/0/z_index = -3
2:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:0/0/physics_layer_0/angular_velocity = 0.0
3:0/0 = 0
3:0/0/z_index = -4
3:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:0/0/physics_layer_0/angular_velocity = 0.0
4:0/0 = 0
4:0/0/z_index = -5
4:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:0/0/physics_layer_0/angular_velocity = 0.0
5:0/0 = 0
5:0/0/z_index = -6
5:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:0/0/physics_layer_0/angular_velocity = 0.0
6:0/0 = 0
6:0/0/z_index = -7
6:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:0/0/physics_layer_0/angular_velocity = 0.0
7:0/0 = 0
7:0/0/z_index = -8
7:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:0/0/physics_layer_0/angular_velocity = 0.0
8:0/0 = 0
8:0/0/z_index = -9
8:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:0/0/physics_layer_0/angular_velocity = 0.0
0:1/0 = 0
0:1/0/z_index = -1
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0 = 0
1:1/0/z_index = -2
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0
2:1/0 = 0
2:1/0/z_index = -3
2:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:1/0/physics_layer_0/angular_velocity = 0.0
3:1/0 = 0
3:1/0/z_index = -4
3:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:1/0/physics_layer_0/angular_velocity = 0.0
4:1/0 = 0
4:1/0/z_index = -5
4:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:1/0/physics_layer_0/angular_velocity = 0.0
5:1/0 = 0
5:1/0/z_index = -6
5:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:1/0/physics_layer_0/angular_velocity = 0.0
6:1/0 = 0
6:1/0/z_index = -7
6:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:1/0/physics_layer_0/angular_velocity = 0.0
7:1/0 = 0
7:1/0/z_index = -8
7:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:1/0/physics_layer_0/angular_velocity = 0.0
8:1/0 = 0
8:1/0/z_index = -9
8:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:1/0/physics_layer_0/angular_velocity = 0.0
0:2/0 = 0
0:2/0/z_index = -1
0:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:2/0/physics_layer_0/angular_velocity = 0.0
1:2/0 = 0
1:2/0/z_index = -2
1:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:2/0/physics_layer_0/angular_velocity = 0.0
2:2/0 = 0
2:2/0/z_index = -3
2:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:2/0/physics_layer_0/angular_velocity = 0.0
3:2/0 = 0
3:2/0/z_index = -4
3:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:2/0/physics_layer_0/angular_velocity = 0.0
4:2/0 = 0
4:2/0/z_index = -5
4:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:2/0/physics_layer_0/angular_velocity = 0.0
5:2/0 = 0
5:2/0/z_index = -6
5:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:2/0/physics_layer_0/angular_velocity = 0.0
6:2/0 = 0
6:2/0/z_index = -7
6:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:2/0/physics_layer_0/angular_velocity = 0.0
7:2/0 = 0
7:2/0/z_index = -8
7:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:2/0/physics_layer_0/angular_velocity = 0.0
8:2/0 = 0
8:2/0/z_index = -9
8:2/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:2/0/physics_layer_0/angular_velocity = 0.0
0:3/0 = 0
0:3/0/z_index = -1
0:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:3/0/physics_layer_0/angular_velocity = 0.0
1:3/0 = 0
1:3/0/z_index = -2
1:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:3/0/physics_layer_0/angular_velocity = 0.0
2:3/0 = 0
2:3/0/z_index = -3
2:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:3/0/physics_layer_0/angular_velocity = 0.0
3:3/0 = 0
3:3/0/z_index = -4
3:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:3/0/physics_layer_0/angular_velocity = 0.0
4:3/0 = 0
4:3/0/z_index = -5
4:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:3/0/physics_layer_0/angular_velocity = 0.0
5:3/0 = 0
5:3/0/z_index = -6
5:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:3/0/physics_layer_0/angular_velocity = 0.0
6:3/0 = 0
6:3/0/z_index = -7
6:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:3/0/physics_layer_0/angular_velocity = 0.0
7:3/0 = 0
7:3/0/z_index = -8
7:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:3/0/physics_layer_0/angular_velocity = 0.0
8:3/0 = 0
8:3/0/z_index = -9
8:3/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:3/0/physics_layer_0/angular_velocity = 0.0
0:4/0 = 0
0:4/0/z_index = -1
0:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:4/0/physics_layer_0/angular_velocity = 0.0
1:4/0 = 0
1:4/0/z_index = -2
1:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:4/0/physics_layer_0/angular_velocity = 0.0
2:4/0 = 0
2:4/0/z_index = -3
2:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:4/0/physics_layer_0/angular_velocity = 0.0
3:4/0 = 0
3:4/0/z_index = -4
3:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:4/0/physics_layer_0/angular_velocity = 0.0
4:4/0 = 0
4:4/0/z_index = -5
4:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:4/0/physics_layer_0/angular_velocity = 0.0
5:4/0 = 0
5:4/0/z_index = -6
5:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:4/0/physics_layer_0/angular_velocity = 0.0
6:4/0 = 0
6:4/0/z_index = -7
6:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:4/0/physics_layer_0/angular_velocity = 0.0
7:4/0 = 0
7:4/0/z_index = -8
7:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:4/0/physics_layer_0/angular_velocity = 0.0
8:4/0 = 0
8:4/0/z_index = -9
8:4/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:4/0/physics_layer_0/angular_velocity = 0.0
0:5/0 = 0
0:5/0/z_index = -1
0:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:5/0/physics_layer_0/angular_velocity = 0.0
1:5/0 = 0
1:5/0/z_index = -2
1:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:5/0/physics_layer_0/angular_velocity = 0.0
2:5/0 = 0
2:5/0/z_index = -3
2:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:5/0/physics_layer_0/angular_velocity = 0.0
3:5/0 = 0
3:5/0/z_index = -4
3:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:5/0/physics_layer_0/angular_velocity = 0.0
4:5/0 = 0
4:5/0/z_index = -5
4:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:5/0/physics_layer_0/angular_velocity = 0.0
5:5/0 = 0
5:5/0/z_index = -6
5:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:5/0/physics_layer_0/angular_velocity = 0.0
6:5/0 = 0
6:5/0/z_index = -7
6:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:5/0/physics_layer_0/angular_velocity = 0.0
7:5/0 = 0
7:5/0/z_index = -8
7:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:5/0/physics_layer_0/angular_velocity = 0.0
8:5/0 = 0
8:5/0/z_index = -9
8:5/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:5/0/physics_layer_0/angular_velocity = 0.0
0:6/0 = 0
0:6/0/z_index = -1
0:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:6/0/physics_layer_0/angular_velocity = 0.0
1:6/0 = 0
1:6/0/z_index = -2
1:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:6/0/physics_layer_0/angular_velocity = 0.0
2:6/0 = 0
2:6/0/z_index = -3
2:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:6/0/physics_layer_0/angular_velocity = 0.0
3:6/0 = 0
3:6/0/z_index = -4
3:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:6/0/physics_layer_0/angular_velocity = 0.0
4:6/0 = 0
4:6/0/z_index = -5
4:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:6/0/physics_layer_0/angular_velocity = 0.0
5:6/0 = 0
5:6/0/z_index = -6
5:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:6/0/physics_layer_0/angular_velocity = 0.0
6:6/0 = 0
6:6/0/z_index = -7
6:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:6/0/physics_layer_0/angular_velocity = 0.0
7:6/0 = 0
7:6/0/z_index = -8
7:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:6/0/physics_layer_0/angular_velocity = 0.0
8:6/0 = 0
8:6/0/z_index = -9
8:6/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:6/0/physics_layer_0/angular_velocity = 0.0
0:7/0 = 0
0:7/0/z_index = -1
0:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:7/0/physics_layer_0/angular_velocity = 0.0
1:7/0 = 0
1:7/0/z_index = -2
1:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:7/0/physics_layer_0/angular_velocity = 0.0
2:7/0 = 0
2:7/0/z_index = -3
2:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:7/0/physics_layer_0/angular_velocity = 0.0
3:7/0 = 0
3:7/0/z_index = -4
3:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:7/0/physics_layer_0/angular_velocity = 0.0
4:7/0 = 0
4:7/0/z_index = -5
4:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:7/0/physics_layer_0/angular_velocity = 0.0
5:7/0 = 0
5:7/0/z_index = -6
5:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:7/0/physics_layer_0/angular_velocity = 0.0
6:7/0 = 0
6:7/0/z_index = -7
6:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:7/0/physics_layer_0/angular_velocity = 0.0
7:7/0 = 0
7:7/0/z_index = -8
7:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:7/0/physics_layer_0/angular_velocity = 0.0
8:7/0 = 0
8:7/0/z_index = -9
8:7/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:7/0/physics_layer_0/angular_velocity = 0.0
0:8/0 = 0
0:8/0/z_index = -1
0:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:8/0/physics_layer_0/angular_velocity = 0.0
1:8/0 = 0
1:8/0/z_index = -2
1:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:8/0/physics_layer_0/angular_velocity = 0.0
2:8/0 = 0
2:8/0/z_index = -3
2:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
2:8/0/physics_layer_0/angular_velocity = 0.0
3:8/0 = 0
3:8/0/z_index = -4
3:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
3:8/0/physics_layer_0/angular_velocity = 0.0
4:8/0 = 0
4:8/0/z_index = -5
4:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
4:8/0/physics_layer_0/angular_velocity = 0.0
5:8/0 = 0
5:8/0/z_index = -6
5:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
5:8/0/physics_layer_0/angular_velocity = 0.0
6:8/0 = 0
6:8/0/z_index = -7
6:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
6:8/0/physics_layer_0/angular_velocity = 0.0
7:8/0 = 0
7:8/0/z_index = -8
7:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
7:8/0/physics_layer_0/angular_velocity = 0.0
8:8/0 = 0
8:8/0/z_index = -9
8:8/0/physics_layer_0/linear_velocity = Vector2(0, 0)
8:8/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_igu8f"]
texture = ExtResource("2_p1xed")
0:0/0 = 0
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0
1:0/0 = 0
1:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:0/0/physics_layer_0/angular_velocity = 0.0
0:1/0 = 0
0:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:1/0/physics_layer_0/angular_velocity = 0.0
1:1/0 = 0
1:1/0/physics_layer_0/linear_velocity = Vector2(0, 0)
1:1/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_wv0dy"]
texture = ExtResource("3_bfiom")
0:0/animation_frame_0/duration = 0.3
0:0/animation_frame_1/duration = 0.3
0:0/animation_frame_2/duration = 0.3
0:0/animation_frame_3/duration = 0.3
0:0/0 = 0
0:0/0/z_index = -7
0:0/0/physics_layer_0/linear_velocity = Vector2(0, 0)
0:0/0/physics_layer_0/angular_velocity = 0.0

[sub_resource type="TileSet" id="TileSet_32ind"]
tile_size = Vector2i(10, 10)
physics_layer_0/collision_layer = 1
sources/0 = SubResource("TileSetAtlasSource_7itt6")
sources/1 = SubResource("TileSetAtlasSource_igu8f")
sources/2 = SubResource("TileSetAtlasSource_wv0dy")

[sub_resource type="GDScript" id="GDScript_lthvx"]
script/source = "
extends TileMap

@onready var object_tiles = {
	\"tree\":preload(\"res://source/terrain/tree.tscn\"),
	\"stone\":preload(\"res://source/terrain/stone.tscn\"),
	\"wheat\":preload(\"res://source/terrain/wheat.tscn\"),
	}

@onready var player = get_parent().get_parent().get_node(\"Player\")

var moisture = FastNoiseLite.new()      # 湿度
var temperature = FastNoiseLite.new()   # 温度
var altitude = FastNoiseLite.new()      # 海拔

var chunk_width = 16    # 单区块宽
var chunk_height = 16   # 单区块高

var chunk_x_num = 4   # 区块X轴渲染数
var chunk_y_num = 3   # 区块Y轴渲染数

var generated_chunks = {}

var biome_list = {
	\"deep_ocean\":{}, # 深海群系
	\"ocean\":{}, # 海洋群系
	\"shoal\":{}, # 浅滩群系
	\"beach\":{}, # 沙滩群系
	\"plains\":[
		[3,2],[4,2],
		[3,3],[4,3],
		[3,4],[4,4],
		[3,5],[4,5],
		[3,6],[4,6],
	],# 平原群系
	\"coniferous\":{}, # 针叶林群系
	\"jungle\":{}, # 热带雨林群系
	\"desert\":{}, # 沙漠群系
	\"mountain\":{}, # 山脉群系
}

var biome_data = {
	\"deep_ocean\":{}, # 深海群系
	\"ocean\":{}, # 海洋群系
	\"shoal\":{}, # 浅滩群系
	\"beach\":{}, # 沙滩群系
	\"plains\":{\"tree\":0.1}, # 平原群系
	\"coniferous\":{}, # 针叶林群系
	\"jungle\":{}, # 热带雨林群系
	\"desert\":{}, # 沙漠群系
	\"mountain\":{}, # 山脉群系
}

func _ready():
	moisture.seed = randi()
	temperature.seed = randi()
	altitude.seed = randi()

func _physics_process(delta):
	generate_chunks_around_player(player.position)
	
	if Input.is_action_pressed(\"mouse_right\"):
		var pos = local_to_map(get_global_mouse_position())
		set_cell(1, Vector2(pos.x, pos.y), 1, Vector2(0,0), 0)

func generate_chunks_around_player(position):
	var tile_pos = local_to_map(position)
	var current_chunk = Vector2(int(tile_pos.x / chunk_width), int(tile_pos.y / chunk_height))
	
	for x in range(current_chunk.x - (chunk_x_num-1), current_chunk.x + chunk_x_num):
		for y in range(current_chunk.y - (chunk_y_num-1), current_chunk.y + chunk_y_num):
			if not generated_chunks.has(Vector2(x, y)):
				generate_chunk(Vector2(x, y))
				generated_chunks[Vector2(x, y)] = true

func generate_chunk(chunk_pos):
	var chunk_x = chunk_pos.x
	var chunk_y = chunk_pos.y
	
	for x in range(chunk_width):
		for y in range(chunk_height):
			var real_x = chunk_x * chunk_width + x
			var real_y = chunk_y * chunk_height + y
			
			var moisture_noise = moisture.get_noise_2d(real_x, real_y) * 45
			var temperature_noise = temperature.get_noise_2d(real_x, real_y) * 45
			var altitude_noise = altitude.get_noise_2d(real_x, real_y) * 45
			
			var select_x = round(moisture_noise + 45) / 10
			var select_y = round(temperature_noise + 45) / 10
			
			# 深海
			if -100 < altitude_noise and altitude_noise <= -10:
				set_cell(0, Vector2(real_x, real_y), 0, Vector2(8, select_y) ,0)
			# 海洋
			elif -10 < altitude_noise and altitude_noise <= 0:
				set_cell(0, Vector2(real_x, real_y), 0, Vector2(7, select_y), 0)
			# 浅滩
			elif 0 < altitude_noise and altitude_noise <= 6:
				set_cell(0, Vector2(real_x, real_y), 0, Vector2(6, select_y), 0)
			# 海滩
			elif 6 < altitude_noise and altitude_noise <= 9:
				set_cell(0, Vector2(real_x, real_y), 0, Vector2(5, select_y), 0)
			# 湿度温度地形
			else:
				set_cell(0,Vector2(real_x, real_y),0,Vector2(select_x, select_y),0)
			
			var land_tile_data = get_cell_atlas_coords(0,Vector2(real_x, real_y))
			
			# 水纹动画效果
			if land_tile_data.x == 6 or land_tile_data.x == 7 or land_tile_data.x == 8:
				set_cell(2, Vector2(real_x, real_y), 2, Vector2.ZERO, 0)
			
			if land_tile_data.x == 1 or land_tile_data.x == 2:
				var tile_probability = randf()
				if tile_probability <= 0.9:
					var wheat_instantiate = object_tiles[\"wheat\"].instantiate()
					wheat_instantiate.position = map_to_local(Vector2(real_x, real_y))
					get_parent().get_parent().add_child(wheat_instantiate)
					
			
			if land_tile_data.x == 3 or land_tile_data.x == 4:
				var tile_probability = randf()
				if tile_probability <= 0.1:
					var tree_instantiate = object_tiles[\"tree\"].instantiate()
					tree_instantiate.position = map_to_local(Vector2(real_x, real_y))
					get_parent().get_parent().add_child(tree_instantiate)
				
			if land_tile_data.x == 5:
				var tile_probability = randf()
				if tile_probability <= 0.03:
					var stone_instantiate = object_tiles[\"stone\"].instantiate()
					stone_instantiate.position = map_to_local(Vector2(real_x, real_y))
					get_parent().get_parent().add_child(stone_instantiate)
				
			
"

[sub_resource type="Environment" id="Environment_vwu2m"]
background_mode = 3
tonemap_white = 0.9
glow_enabled = true
glow_normalized = true
fog_enabled = true
volumetric_fog_enabled = true

[node name="World" type="Node2D"]

[node name="TileMap" type="TileMap" parent="."]
texture_filter = 1
tile_set = SubResource("TileSet_32ind")
format = 2
layer_0/name = "Land"
layer_1/name = "Building"
layer_1/enabled = true
layer_1/modulate = Color(1, 1, 1, 1)
layer_1/y_sort_enabled = false
layer_1/y_sort_origin = 0
layer_1/z_index = 0
layer_1/tile_data = PackedInt32Array()
layer_2/name = "Animation"
layer_2/enabled = true
layer_2/modulate = Color(1, 1, 1, 1)
layer_2/y_sort_enabled = false
layer_2/y_sort_origin = 0
layer_2/z_index = 0
layer_2/tile_data = PackedInt32Array()
script = SubResource("GDScript_lthvx")

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource("Environment_vwu2m")
